@using Business.Models
@model UpdateTaskViewModel
@{
	ViewData["Title"] = "TaskDetails";
	Layout = "~/Views/Shared/LayoutUI.cshtml";
	var Selects = ViewData["Selects"] as List<SelectListItemViewModel>;
	var tags = ViewData["Tags"] as List<AllTagsViewModel>;
	var task = ViewData["TaskModel"] as TaskViewModel;

	int userId = (int)ViewData["UserId"];


}
@section Styles {
	<link href="
		https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/css/select2.min.css
																" rel="stylesheet">
	<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/select2-bootstrap-5-theme@1.3.0/dist/select2-bootstrap-5-theme.min.css" />

	<link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.0/font/bootstrap-icons.css" rel="stylesheet">

	<script src="https://cdnjs.cloudflare.com/ajax/libs/timeago.js/4.0.2/timeago.min.js"></script>

}

<nav aria-label="breadcrumb">
	<ol class="breadcrumb">
		<li class="breadcrumb-item"><a href="/Task/Index">Task</a></li>
		<li class="breadcrumb-item active" aria-current="page">Task Details</li>
	</ol>
</nav>

<div class="d-flex">


	<div class="col-8 flex-column d-flex">



		<div class="form-group flex-grow-1 flex-shrink-1">

			<h1>
				@task.Name
			</h1>
			<div class="form-group">
				<h4>
					@task.Description
				</h4>
			</div>
		</div>


		<div class="form-group h-50 pb-5">
			@*
			gelecekteki comment yeri olabilir eklenirse
			*@
			<form id="AddComment" asp-controller="Comment" asp-action="AddComment" method="post">
				<div class="input-group mb-3">
					<input id="TaskId" name="TaskId" type="number" hidden value="@Model.Id" />

					<input id="Content" name="Content" type="text" class="form-control" placeholder="Make a comment">
					<div class="input-group-append">
						<button class="btn btn-outline-secondary" type="submit"><i class="bi bi-send"></i></button>
					</div>
				</div>
			</form>

			<div class="form-group">
				

				 <div class="row">
					@if(task.Comments.Count != 0)
					{
						
					
					<div class="col" style="overflow-y:scroll; height: 15rem">
						@foreach(var item in task.Comments)
						{
							<div class="d-flex flex-start mt-4">
								<a class="me-3" href="/Profile/@item.User.Username">
								<img class="rounded-circle shadow-1-strong me-3 p-1"
								src="@(item.User.Image != null ? "/uploads/images/"+item.User.Image : "/assets/images/default_profile_foto.jpg")" alt="avatar" width="65"
								height="65" />
								</a>
								<div class="flex-grow-1 flex-shrink-1">
									<div>
										<div class="d-flex justify-content-between align-items-center">
											<p class="mb-1">
												<a href="/Profile/@item.User.Username"> @(item.User.Name + " " + item.User.LastName)</a> <span class="small">- <time datetime="@item.CreatedOn.ToString("o")">01-01-0001</time></span>
											</p>
											<div class="d-flex justify-content-between">


													<a class="btn btn-link" href="/Comment/LikeComment/@item.Id?TaskId=@Model.Id"><i class="fas fa-heart @(item.Likes.Any(x => x.UserId == userId) ? "text-danger" : "")"></i><span class="small @(item.Likes.Any(x => x.UserId == userId) ? "text-danger" : "")"> @(item.Likes.Any(x => x.UserId == userId) ? "Liked" : "Like")</span></a>

												<button class="btn btn-link" data-text="@@@item.User.Username#@item.Id#  " onclick="Reply(this)"><i class="fas fa-reply ml-2"></i><span class="small"> Reply</span></button>
												
													@if(item.User.Id == userId)
													{
														<button class="btn btn-link" data-text="#@item.Id#  " onclick="Edit(this)"><i class="fas fa-edit ml-2"></i><span class="small"> Edit</span></button>
														<a href="/Comment/DeleteComment/@item.Id" class="btn btn-link"><i class="bi bi-trash text-danger"></i><span class="small text-danger"> Delete</span></a>
													}
													
											</div>
										</div>
										<p class="small mb-0">
											@item.Content
										</p>
									</div>

									@if(item.Replys != null)
									{
									
									@foreach(var reply in item.Replys)
									{
									 <div class="d-flex flex-start mt-4">
										<a class="me-3" href="/Profile/@reply.User.Username">
											<img class="rounded-circle shadow-1-strong p-1"
														 src="@(reply.User.Image != null ? "/uploads/images/"+reply.User.Image : "/assets/images/default_profile_foto.jpg")" alt="avatar"
												 width="65" height="65" />
										</a>
										<div class="flex-grow-1 flex-shrink-1">
											<div>
												<div class="d-flex justify-content-between align-items-center">
													<p class="mb-1">
															<a href="/Profile/@reply.User.Username"> @(reply.User.Name + " " + reply.User.LastName)</a> <span class="small">- <time datetime="@reply.CreatedOn.ToString("o")">01-01-0001</time></span>
													</p>
													<div class="d-flex justify-content-between">

														<a class="btn btn-link" href="/Comment/LikeComment/@reply.Id?TaskId=@Model.Id"><i class="fas fa-heart @(reply.Likes.Any(x => x.UserId == userId) ? "text-danger" : "")"></i><span class="small @(reply.Likes.Any(x => x.UserId == userId) == true ? "text-danger" : "")"> @(reply.Likes.Any(x => x.UserId == userId) ? "Liked" : "Like")</span></a>

														<button class="btn btn-link" data-text="@@@reply.User.Username#@reply.Id#  " onclick="Reply(this)"><i class="fas fa-reply ml-2"></i><span class="small"> Reply</span></button>

														@if (reply.User.Id == userId)
														{
															<button class="btn btn-link" data-text="#@item.Id#  " onclick="Edit(this)"><i class="fas fa-edit ml-2"></i><span class="small"> Edit</span></button>
															<button class="btn btn-link" onclick=""><i class="bi bi-trash text-danger"></i><span class="small text-danger"> Delete</span></button>
														}
													</div>
												</div>
												<p class="small mb-0">
													@reply.Content
												</p>
											</div>
										</div>
									</div>

									}
									}
								</div> 
							</div>

						}
						
						
					</div>
					}
				</div> 


			</div>

		</div>

	</div>
	<div class="col-4 flex-column">
		@* burasi yan tarafta kalan küçük alanın başlangıcı*@


		<div class="form-group d-flex justify-content-between text-center align-items-center">
			<span>Task Responsible</span>
			<span class="w-50">
				@task.ResponsibleId.Username
			</span>
		</div>

		<div class="form-group d-flex justify-content-between text-center align-items-center">

			<span>Task Reporter</span>
			<span class="w-50">
				@task.ReporterId.Username
			</span>
		</div>

		<div class="form-group d-flex justify-content-between text-center align-items-center">
			<span>Due time</span>
			<span class="w-50">@task.DueTime</span>
		</div>

		<div class="form-group d-flex justify-content-between text-center">
			<span>Created On</span>
			<span class="w-50">@task.CreatedOn</span>
		</div>


		<div class="form-group d-flex justify-content-between text-center align-items-center">

			<span>Tags</span>
			<span class="w-50">@task.Tag.Name</span>
		</div>

		<div class="form-group d-flex justify-content-between text-center align-items-center">
			<span>Project Name</span>
			<a href="/Project/ProjectDetails/@task.Project.Id" class="btn btn-light w-50">@task.Project.Name</a>
		</div>

		<div class="form-group d-flex justify-content-between text-center align-items-center">

			<button data-toggle="modal"
					data-target="#taskupdate-modal" class="btn btn-success w-50 m-2">
				Update Task
			</button>

			<button data-toggle="modal"
			   data-target="#taskdelete-modal" class="btn btn-danger w-50 m-2">
				Delete Task
			</button>
		</div>





	</div>


</div>


<div id="taskupdate-modal" class="modal fade" tabindex="-1" role="dialog"
	 aria-hidden="true">
	<div class="modal-dialog">
		<div class="modal-content">

			<div class="modal-body">
				<div class="text-center mt-2 mb-4">
					<a href="index.html" class="text-success">
						<span>
							<img class="mr-2" src="/assets/images/vitalen-bt-logo.png"
								 alt="" height="18">
						</span>
					</a>
				</div>

				<form class="pl-3 pr-3" method="post">

					<input type="hidden" asp-for="Id" />
					@* <input type="hidden" asp-for="ProjectId" /> *@

					<div class="form-group">
						<label for="taskName">Task name</label>
						<input class="form-control" type="text" asp-for="Name" id="taskName"
							   required="">
					</div>

					<div class="form-group">
						<label for="description">Description</label>
						<input class="form-control" type="text" asp-for="Description" id="description"
							   required="">
					</div>

					<div class="form-group">
						<label for="priority">Priority</label>
						<input class="form-control" type="number" asp-for="Priority" id="priority"
							   required="">
					</div>

					<div class="form-group">
						<label for="dueTime">Due Time</label>
						<input class="form-control" type="datetime-local" asp-for="DueTime" id="dueTime"
							   required="">
					</div>


					<div class="form-group">
						<label for="userSelectResponsible">Task Responsible</label>
						<select id="userSelectResponsible" class="form-select" data-placeholder="Choose a thing" asp-for="ResponsibleId">

							@foreach (var user in Selects)
							{
								<option value="@user.id">@user.text</option>
							}
						</select>
					</div>

					<div class="form-group">
						<label for="userSelectReporter">Task Reporter</label>
						<select id="userSelectReporter" class="form-select" data-placeholder="Choose a thing" asp-for="ReporterId">

							@foreach (var user in Selects)
							{
								<option value="@user.id">@user.text</option>
							}
						</select>
					</div>

					<div class="form-group">
						<label for="userSelect">Tag</label>
						<select id="userSelect" class="form-control" asp-for="TagId">

							@foreach (var user in tags)
							{
								<option value="@user.Id">@user.Name</option>
							}
						</select>
					</div>



					<div class="form-group text-center">
						<button class="btn btn-primary" type="submit">
							UpdateTask
						</button>
					</div>



				</form>

			</div>
		</div>
	</div>
</div>

<div id="taskdelete-modal" class="modal fade" tabindex="-1" role="dialog"
	 aria-hidden="true">
	<div class="modal-dialog modal-dialog-centered">
		<div class="modal-content">

			<div class="modal-body">
				<div class="text-center mt-2 mb-4">
					Are you sure about deleting this task?
				</div>

				<div class="text-center">
					<a href="/Task/DeleteTask/@Model.Id" class="btn btn-success">Delete</a>
					<button data-toggle="modal"
							data-target="#taskdelete-modal" class="btn btn-danger">
						Cancel
					</button>
				</div>
				
				

			</div>
		</div>
	</div>
</div>










@section Scripts {

	<script src="https://cdnjs.cloudflare.com/ajax/libs/select2/4.0.13/js/select2.min.js"></script>
	<script src="
		https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/js/select2.min.js"></script>

	<script>
		// select2 için dinamik bir şekilde kullanıcıları getirme

		$(document).ready(function () {
			$('#userSelectResponsible').select2({
				theme: 'bootstrap-5',
				placeholder: $(this).data('placeholder'),
				width: '100%',
				ajax: {
					url: "/User/SelectList/?ProjectId=@(task.Project.Id)",
					dataType: 'json',
					delay: 250,
					data: function (params) {
						return {
							keyword: params.term,
							ProjectId: @task.Project.Id
								};
					},
					processResults: function (data) {
						return {
							results: data,

						};
					},
					cache: true
				},
			});


			$('#userSelectReporter').select2({
				theme: 'bootstrap-5',
				placeholder: $(this).data('placeholder'),
				width: '100%',
				ajax: {
					url: "/User/SelectList/",
					dataType: 'json',
					delay: 250,
					data: function (params) {
						return {
							keyword: params.term,
							ProjectId: @task.Project.Id
									};
					},
					processResults: function (data) {
						return {
							results: data,

						};
					},
					cache: true
				},
			});



		});



	</script>

	<script>
		window.onload = function () {
			timeago.render(document.querySelectorAll('time'));
		};
	</script>

	<script>

		function Reply(element){
			document.querySelector("#Content").value = element.dataset.text;
			document.querySelector("#Content").focus();
		}

		function Edit(element)
		{
			document.querySelector("#Content").value = element.dataset.text;
			document.querySelector("#Content").focus
		}


	</script>

}